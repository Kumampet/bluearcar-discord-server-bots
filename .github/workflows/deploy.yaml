name: Deploy Lambda Monorepo

on:
  push:
    branches:
      - main

jobs:
  changed_functions:
    runs-on: ubuntu-latest
    outputs:
      functions: ${{ steps.detect.outputs.functions }}
      count: ${{ steps.detect.outputs.count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed packages under packages/*
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" && -n "${{ github.base_ref }}" ]]; then
            BASE_REF="origin/${{ github.base_ref }}"
            git fetch --no-tags --depth=1 origin "${{ github.base_ref }}"
            DIFF_RANGE="${BASE_REF}...HEAD"
          else
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              DIFF_RANGE="HEAD^...HEAD"
            else
              DIFF_RANGE=""
            fi
          fi

          if [[ -n "${DIFF_RANGE}" ]]; then
            CHANGED_FILES=$(git diff --name-only ${DIFF_RANGE})
          else
            CHANGED_FILES=$(git ls-files)
          fi

          mapfile -t PKGS < <(echo "${CHANGED_FILES}" | awk -F/ '/^packages\// {print $2}' | sort -u | grep -v '^$' || true)

          if [[ ${#PKGS[@]} -eq 0 ]]; then
            JSON="[]"
            COUNT=0
          else
            JSON=$(printf '%s\n' "${PKGS[@]}" | jq -R . | jq -s .)
            COUNT=${#PKGS[@]}
          fi

          echo "functions=${JSON}" >> "$GITHUB_OUTPUT"
          echo "count=${COUNT}" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: [changed_functions]
    permissions:
      id-token: write
      contents: read
    environment: production
    if: needs.changed_functions.outputs.count != '0'

    strategy:
      fail-fast: false
      matrix:
        function: ${{ fromJson(needs.changed_functions.outputs.functions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy ${{ matrix.function }} to Lambda
        working-directory: ./packages/${{ matrix.function }}
        run: |
          # 各関数のディレクトリに移動してzipファイルを作成
          zip -r deployment_package.zip .
          aws lambda update-function-code --function-name ${{ matrix.function }} --zip-file fileb://deployment_package.zip